# simavr directory
SIMAVR		:= ${shell for p in . .. ../.. ../../..;do test -d $$p/simavr/sim && echo $$p/simavr; done}

CFLAGS		+= -O2 -Wall --std=gnu99 -Wall
CFLAGS		+= -g
CXXFLAGS	+= -Wall -g

CPPFLAGS	+= ${patsubst %,-I%,${subst :, ,${IPATH}}}

CXX 			?= clang++
AR 			?= ar
RANLIB 		?= ranlib
MKDIR		?= mkdir -p
INSTALL		?= install
SHELL	 	:= ${shell which bash}

OBJ 		:= obj-${shell $(CC) -dumpmachine}
LDFLAGS 	+= -L${LIBDIR} -lsimavr -lm

LDFLAGS 	+= -lelf

ifeq (${shell uname}, Linux)
ifeq ($(RELEASE),1)
# allow the shared library to be found in the build directory
# only for linking, the install time location is used at runtime
LFLAGS		+= -Wl,-rpath-link,${LIBDIR}
else
# allow the shared library to be found in the build directory
LFLAGS		+= -Wl,-rpath,${LIBDIR}
endif
endif

${OBJ}/%.c.o: src/%.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -MMD \
		$<  -c -o $@

${OBJ}/%.cc.o: src/%.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -MMD \
		$<  -c -o $@

${OBJ}/%.elf:
	$(CXX) -MMD ${CFLAGS}  ${LFLAGS} -o $@ $^ $(LDFLAGS)

obj: ${OBJ}

${OBJ}:
	@mkdir -p ${OBJ}

clean-${OBJ}:
	rm -rf ${OBJ}

# include the dependency files generated by gcc, if any
-include ${wildcard ${OBJ}/*.d}
